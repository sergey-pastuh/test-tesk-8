## Autogenerated by Scribe. DO NOT MODIFY.

name: Tasks
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get paginated task tree for current user'
      description: 'Returns a paginated list of root tasks, each with nested subtasks.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      status:
        name: status
        description: 'Optional. Filter by task status.'
        required: false
        example: todo
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      priority:
        name: priority
        description: 'Optional. Filter by task priority (1 to 5).'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Optional. Search by title or description.'
        required: false
        example: 'bug fix'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Optional. Sort by multiple fields.'
        required: false
        example: 'priority desc,created_at asc'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: todo
      priority: 3
      search: 'bug fix'
      sort: 'priority desc,created_at asc'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":188,"title":"Et odit est et laudantium molestiae consequatur.","description":"Consequatur soluta molestiae pariatur itaque nihil cupiditate hic. Libero excepturi non non aut. Omnis totam odio omnis repudiandae dolorem minus. Dicta totam consequatur nobis.","status":"todo","priority":3,"created_at":"2025-07-07T17:39:21.000000Z","completed_at":null},{"id":189,"title":"Est aut est culpa quos voluptates.","description":"Inventore pariatur soluta iure laudantium recusandae velit nemo. Quibusdam placeat qui tempora sit. Est enim aspernatur quis doloribus sunt dicta.","status":"todo","priority":3,"created_at":"2025-07-07T17:39:21.000000Z","completed_at":null}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new task'
      description: 'Creates a new root-level or nested task for the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The task title.'
        required: true
        example: 'Fix login bug'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Optional description.'
        required: false
        example: "Button doesn't submit"
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      priority:
        name: priority
        description: 'Task priority (1 to 5).'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Optional. Default is "todo".'
        required: false
        example: todo
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      parent_id:
        name: parent_id
        description: 'Optional. ID of the parent task.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      title: 'Fix login bug'
      description: "Button doesn't submit"
      priority: 3
      status: todo
      parent_id: 4
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":190,"title":"Minus voluptatem quisquam quibusdam sed.","description":"Quo sed fugit facilis perferendis dolores molestias ipsam sit. Sed fuga aspernatur natus earum. Dignissimos perferendis voluptatibus incidunt nostrum quia possimus. Id et necessitatibus architecto aut consequatur debitis.","status":"todo","priority":3,"created_at":"2025-07-07T17:39:21.000000Z","completed_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tasks/{task_id}'
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing task'
      description: 'Updates a taskâ€™s title, description, status, or priority. Only editable if not completed.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task to update.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
      task: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Optional. New title.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: Optional.
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      priority:
        name: priority
        description: Optional.
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Optional. Must be a valid status.'
        required: false
        example: done
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Optional. New parent ID.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      title: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      priority: 2
      status: done
      parent_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":191,"title":"Dolorum amet iste laborum eius est dolor.","description":"Voluptatem quisquam quibusdam sed vel a quo sed. Facilis perferendis dolores molestias ipsam. Veniam sed fuga aspernatur natus earum.","status":"todo","priority":3,"created_at":"2025-07-07T17:39:21.000000Z","completed_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{task_id}'
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a task'
      description: 'Deletes a task. Only allowed if the task is not completed.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task to delete.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
      task: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":192,"title":"Dolorum amet iste laborum eius est dolor.","description":"Voluptatem quisquam quibusdam sed vel a quo sed. Facilis perferendis dolores molestias ipsam. Veniam sed fuga aspernatur natus earum.","status":"todo","priority":3,"created_at":"2025-07-07T17:39:21.000000Z","completed_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/tasks/{task_id}/complete'
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark task as completed'
      description: 'Marks a task as done. Only allowed if all subtasks are completed.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task to complete.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
      task: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":193,"title":"Dolorum amet iste laborum eius est dolor.","description":"Voluptatem quisquam quibusdam sed vel a quo sed. Facilis perferendis dolores molestias ipsam. Veniam sed fuga aspernatur natus earum.","status":"todo","priority":3,"created_at":"2025-07-07T17:39:21.000000Z","completed_at":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
